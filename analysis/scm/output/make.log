
 make.py started: 2018-03-26 19:36:10 C:\Users\cravizza\GitHub\Aborto-Uruguay\analysis\scm\code 




Execute:  "C:\Program Files (x86)\Stata15\StataSE-64.exe" /e do "./scm.do"
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.37e+001 | 1.60e-008 | -4.09e+002 | -7.09e+002 |  0.136 | 0.0000 | 1.00e+002
      1 | 4.06e-001 | 8.83e-011 | -4.09e+002 | -9.54e+002 |  0.000 | 0.9945 | 2.52e-005
      2 | 2.56e-003 | 5.56e-013 | -4.09e+002 | -4.21e+002 |  1.521 | 0.9937 | 3.30e-006
      3 | 1.11e-004 | 2.41e-014 | -4.09e+002 | -4.10e+002 |  2.883 | 0.9567 | 3.24e-006
      4 | 2.94e-005 | 6.38e-015 | -4.09e+002 | -4.09e+002 |  3.409 | 0.7349 | 5.46e-006
      5 | 6.39e-006 | 1.39e-015 | -4.09e+002 | -4.09e+002 |  4.022 | 0.7825 | 1.08e-006
      6 | 1.34e-007 | 2.92e-017 | -4.09e+002 | -4.09e+002 |  5.287 | 0.9790 | 2.38e-009
      7 | 7.26e-009 | 1.57e-018 | -4.09e+002 | -4.09e+002 |  6.367 | 0.9459 | 8.62e-010
      8 | 8.67e-011 | 5.28e-020 | -4.09e+002 | -4.09e+002 |  7.612 | 0.9881 | 3.47e-012
      9 | 4.67e-013 | 3.49e-020 | -4.09e+002 | -4.09e+002 |  9.297 | 0.9946 | 4.01e-014
     10 | 2.33e-015 | 5.14e-020 | -4.09e+002 | -4.09e+002 | 11.596 | 0.9950 | 7.13e-016
     11 | 5.57e-016 | 3.68e-020 | -4.09e+002 | -4.09e+002 | 13.904 | 0.9950 | 3.59e-018
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.37e+001 | 4.62e-008 | -2.51e+002 | -5.51e+002 |  0.000 | 0.0000 | 1.00e+002
      1 | 4.03e-001 | 2.53e-010 | -2.51e+002 | -7.96e+002 |  0.000 | 0.9945 | 2.48e-005
      2 | 2.10e-003 | 1.31e-012 | -2.51e+002 | -2.62e+002 |  1.332 | 0.9948 | 2.25e-006
      3 | 5.97e-005 | 3.74e-014 | -2.51e+002 | -2.51e+002 |  2.876 | 0.9715 | 1.33e-006
      4 | 1.50e-005 | 9.39e-015 | -2.51e+002 | -2.51e+002 |  3.415 | 0.7490 | 3.04e-006
      5 | 2.77e-006 | 1.74e-015 | -2.51e+002 | -2.51e+002 |  4.113 | 0.8153 | 4.70e-007
      6 | 3.12e-007 | 1.96e-016 | -2.51e+002 | -2.51e+002 |  5.031 | 0.8872 | 3.47e-008
      7 | 1.76e-009 | 1.10e-018 | -2.51e+002 | -2.51e+002 |  7.021 | 0.9944 | 1.02e-011
      8 | 8.79e-012 | 5.65e-020 | -2.51e+002 | -2.51e+002 |  9.310 | 0.9950 | 8.26e-014
      9 | 4.39e-014 | 6.85e-020 | -2.51e+002 | -2.51e+002 | 11.607 | 0.9950 | 4.25e-016
     10 | 5.45e-016 | 8.01e-020 | -2.51e+002 | -2.51e+002 | 13.883 | 0.9950 | 2.14e-018
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.37e+001 | 3.35e-008 | -2.77e+002 | -5.77e+002 |  0.000 | 0.0000 | 1.00e+002
      1 | 3.68e-001 | 1.68e-010 | -2.77e+002 | -8.22e+002 |  0.000 | 0.9950 | 2.07e-005
      2 | 2.00e-003 | 9.10e-013 | -2.77e+002 | -2.88e+002 |  1.398 | 0.9946 | 2.44e-006
      3 | 7.32e-005 | 3.33e-014 | -2.77e+002 | -2.77e+002 |  2.834 | 0.9634 | 2.08e-006
      4 | 2.69e-005 | 1.22e-014 | -2.77e+002 | -2.77e+002 |  3.261 | 0.6333 | 8.08e-006
      5 | 4.58e-006 | 2.08e-015 | -2.77e+002 | -2.77e+002 |  3.962 | 0.8296 | 6.29e-007
      6 | 2.92e-007 | 1.33e-016 | -2.77e+002 | -2.77e+002 |  4.948 | 0.9362 | 1.72e-008
      7 | 2.67e-009 | 1.21e-018 | -2.77e+002 | -2.77e+002 |  6.401 | 0.9909 | 3.62e-011
      8 | 3.18e-011 | 7.85e-020 | -2.77e+002 | -2.77e+002 |  7.812 | 0.9881 | 2.16e-012
      9 | 2.29e-013 | 7.18e-020 | -2.77e+002 | -2.77e+002 |  8.863 | 0.9928 | 3.08e-014
     10 | 1.46e-015 | 8.35e-020 | -2.77e+002 | -2.77e+002 |  9.791 | 0.9943 | 1.73e-015
     11 | 6.03e-016 | 8.48e-020 | -2.77e+002 | -2.77e+002 | 11.085 | 0.9950 | 1.55e-016
     12 | 4.30e-016 | 9.15e-020 | -2.77e+002 | -2.77e+002 | 13.337 | 0.9950 | 7.88e-018
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.37e+001 | 2.31e-008 | -3.48e+002 | -6.48e+002 |  0.066 | 0.0000 | 1.00e+002
      1 | 4.18e-001 | 1.31e-010 | -3.48e+002 | -8.93e+002 |  0.000 | 0.9943 | 2.66e-005
      2 | 3.07e-003 | 9.60e-013 | -3.48e+002 | -3.61e+002 |  1.423 | 0.9927 | 4.50e-006
      3 | 1.72e-004 | 5.40e-014 | -3.48e+002 | -3.49e+002 |  2.672 | 0.9438 | 5.85e-006
      4 | 3.95e-005 | 1.24e-014 | -3.48e+002 | -3.48e+002 |  3.262 | 0.7709 | 5.61e-006
      5 | 1.42e-005 | 4.44e-015 | -3.48e+002 | -3.48e+002 |  3.709 | 0.6414 | 3.61e-006
      6 | 2.16e-007 | 6.76e-017 | -3.48e+002 | -3.48e+002 |  4.865 | 0.9848 | 2.19e-009
      7 | 1.34e-008 | 4.21e-018 | -3.48e+002 | -3.48e+002 |  5.908 | 0.9381 | 2.55e-009
      8 | 8.38e-011 | 5.47e-020 | -3.48e+002 | -3.48e+002 |  7.562 | 0.9937 | 2.34e-012
      9 | 4.28e-013 | 5.28e-020 | -3.48e+002 | -3.48e+002 |  9.775 | 0.9949 | 3.46e-014
     10 | 2.15e-015 | 5.87e-020 | -3.48e+002 | -3.48e+002 | 12.073 | 0.9950 | 2.02e-016
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.24e+001 | 1.07e-007 | -1.73e+002 | -4.63e+002 |  0.000 | 0.0000 | 1.00e+002
      1 | 5.96e-001 | 8.76e-010 | -1.73e+002 | -7.00e+002 |  0.000 | 0.9918 | 5.60e-005
      2 | 4.23e-003 | 6.23e-012 | -1.73e+002 | -1.89e+002 |  1.033 | 0.9929 | 4.42e-006
      3 | 1.45e-004 | 2.13e-013 | -1.73e+002 | -1.74e+002 |  2.497 | 0.9658 | 2.74e-006
      4 | 1.22e-005 | 1.79e-014 | -1.73e+002 | -1.73e+002 |  3.289 | 0.9159 | 5.69e-007
      5 | 2.85e-006 | 4.19e-015 | -1.73e+002 | -1.73e+002 |  3.897 | 0.7664 | 7.27e-007
      6 | 1.74e-007 | 2.56e-016 | -1.73e+002 | -1.73e+002 |  4.969 | 0.9390 | 1.19e-008
      7 | 2.44e-009 | 3.59e-018 | -1.73e+002 | -1.73e+002 |  6.554 | 0.9859 | 5.28e-011
      8 | 2.01e-011 | 1.22e-019 | -1.73e+002 | -1.73e+002 |  7.976 | 0.9918 | 4.69e-013
      9 | 1.08e-013 | 1.08e-019 | -1.73e+002 | -1.73e+002 |  9.147 | 0.9946 | 7.64e-015
     10 | 7.18e-016 | 1.24e-019 | -1.73e+002 | -1.73e+002 | 11.137 | 0.9950 | 4.44e-016
     11 | 3.73e-016 | 1.14e-019 | -1.73e+002 | -1.73e+002 | 13.434 | 0.9950 | 4.54e-018
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.24e+001 | 1.15e-008 | -5.18e+002 | -8.08e+002 |  0.253 | 0.0000 | 1.00e+002
      1 | 4.14e-001 | 6.57e-011 | -5.18e+002 | -1.05e+003 |  0.000 | 0.9943 | 2.70e-005
      2 | 2.63e-003 | 4.18e-013 | -5.18e+002 | -5.30e+002 |  1.623 | 0.9936 | 3.38e-006
      3 | 1.10e-004 | 1.74e-014 | -5.18e+002 | -5.19e+002 |  3.002 | 0.9583 | 3.11e-006
      4 | 3.07e-005 | 4.87e-015 | -5.18e+002 | -5.18e+002 |  3.541 | 0.7203 | 6.06e-006
      5 | 4.70e-006 | 7.47e-016 | -5.18e+002 | -5.18e+002 |  4.295 | 0.8467 | 5.14e-007
      6 | 3.71e-007 | 5.89e-017 | -5.18e+002 | -5.18e+002 |  5.331 | 0.9211 | 2.37e-008
      7 | 4.54e-009 | 7.26e-019 | -5.18e+002 | -5.18e+002 |  7.114 | 0.9877 | 5.19e-011
      8 | 2.52e-011 | 4.43e-020 | -5.18e+002 | -5.18e+002 |  9.211 | 0.9944 | 1.75e-013
      9 | 1.26e-013 | 5.45e-020 | -5.18e+002 | -5.18e+002 | 11.510 | 0.9950 | 1.14e-015
     10 | 9.38e-016 | 4.21e-020 | -5.18e+002 | -5.18e+002 | 13.860 | 0.9950 | 5.73e-018
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.24e+001 | 1.81e-008 | -4.38e+002 | -7.27e+002 |  0.180 | 0.0000 | 1.00e+002
      1 | 6.41e-001 | 1.61e-010 | -4.38e+002 | -9.64e+002 |  0.000 | 0.9911 | 6.49e-005
      2 | 6.30e-003 | 1.58e-012 | -4.37e+002 | -4.56e+002 |  1.378 | 0.9902 | 8.52e-006
      3 | 3.15e-004 | 7.89e-014 | -4.37e+002 | -4.38e+002 |  2.676 | 0.9500 | 6.71e-006
      4 | 8.33e-005 | 2.09e-014 | -4.38e+002 | -4.38e+002 |  3.142 | 0.7356 | 9.68e-006
      5 | 1.06e-005 | 2.66e-015 | -4.38e+002 | -4.38e+002 |  3.974 | 0.8725 | 7.50e-007
      6 | 2.70e-006 | 6.76e-016 | -4.38e+002 | -4.38e+002 |  4.570 | 0.7460 | 4.49e-007
      7 | 8.45e-008 | 2.12e-017 | -4.38e+002 | -4.38e+002 |  5.969 | 0.9687 | 1.66e-009
      8 | 4.84e-010 | 1.25e-019 | -4.38e+002 | -4.38e+002 |  8.144 | 0.9943 | 2.21e-012
      9 | 2.42e-012 | 4.95e-020 | -4.38e+002 | -4.38e+002 | 10.441 | 0.9950 | 1.12e-014
     10 | 1.21e-014 | 5.76e-020 | -4.38e+002 | -4.38e+002 | 12.738 | 0.9950 | 5.66e-017
----------------------------------------------------------------------------------
optimization converged
counter | pri_inf  | dual_inf  | pri_obj   | dual_obj  | sigfig | alpha  | nu 
----------------------------------------------------------------------------------
      0 | 7.24e+001 | 3.43e-008 | -3.31e+002 | -6.21e+002 |  0.059 | 0.0000 | 1.00e+002
      1 | 5.49e-001 | 2.60e-010 | -3.31e+002 | -8.57e+002 |  0.000 | 0.9924 | 4.76e-005
      2 | 4.46e-003 | 2.11e-012 | -3.31e+002 | -3.47e+002 |  1.320 | 0.9919 | 5.69e-006
      3 | 1.63e-004 | 7.71e-014 | -3.31e+002 | -3.31e+002 |  2.756 | 0.9635 | 3.06e-006
      4 | 7.55e-006 | 3.58e-015 | -3.31e+002 | -3.31e+002 |  3.560 | 0.9536 | 1.80e-007
      5 | 1.13e-006 | 5.35e-016 | -3.31e+002 | -3.31e+002 |  4.341 | 0.8507 | 2.99e-007
      6 | 1.58e-008 | 7.46e-018 | -3.31e+002 | -3.31e+002 |  5.904 | 0.9860 | 4.26e-010
      7 | 1.66e-010 | 1.20e-019 | -3.31e+002 | -3.31e+002 |  7.435 | 0.9895 | 6.52e-012
      8 | 8.31e-013 | 8.53e-020 | -3.31e+002 | -3.31e+002 |  9.680 | 0.9950 | 4.34e-014
      9 | 4.14e-015 | 8.72e-020 | -3.31e+002 | -3.31e+002 | 11.978 | 0.9950 | 2.47e-016
     10 | 5.81e-016 | 9.66e-020 | -3.31e+002 | -3.31e+002 | 14.289 | 0.9950 | 1.25e-018
----------------------------------------------------------------------------------
optimization converged

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.0   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

110-user Stata network perpetual license:
       Serial number:  401506201178
         Licensed to:  Brown University
                       Brown University

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./scm.do 

. clear all

. set more off

. 
. program main_scm
  1.         do ../../globals.do
  2.     * Definition of research designs
.         local control_vars = "edad married nbr_people ind_under14 y_hogar"
  3.         local labor_vars   = "trabajo horas_trabajo"
  4.         local educ_vars    = "educ_HS_or_more educ_more_HS"
  5.         local outcome_vars = "`labor_vars' " + "`educ_vars'"
  6.         local labor_stubs  = `" "Employment" "Hours-worked" "'
  7.         local educ_stubs   = `" "High-school" "Some-college" "'
  8.                 
.         local restr_rivera "restr((loc_code == 101010 | loc_code == 330020 | 
> loc_code == 1630020 | loc_code == 1331050))"
  9.         local restr_salto "restr((loc_code == 101010 | loc_code == 330020 
> | loc_code == 1630020 | loc_code == 1313020 | loc_code == 1331050 | loc_code 
> == 1536000))"
 10.         
.         foreach city in rivera salto {
 11.             foreach group_vars in /*educ*/ labor {
 12.                         
.                         foreach special_legend in "" /*"placebo"*/ {
 13.                         
.                                 if "`special_legend'" == "placebo" {
 14.                                 
.                                     if "`group_vars'" == "labor" {
 15.                                             local sample_restr = "keep if 
> hombre == 0 & inrange(edad, 40, 60)"
 16.                                         }
 17.                                         else {
 18.                                             local sample_restr = "keep if 
> hombre == 0 & inrange(edad, 40, 60)"
 19.                                         }
 20.                                 }
 21.                                 else {
 22.                                     if "`group_vars'" == "labor" {
 23.                                             local sample_restr = "keep if 
> hombre == 0 & inrange(edad, 16, 45)"
 24.                                         }
 25.                                         else {
 26.                                             local sample_restr = "keep if 
> hombre == 0 & inrange(edad, 18, 25)"
 27.                                         }
 28.                                 }
 29.                                         
.                         build_synth_control, outcomes(`outcome_vars') city(`c
> ity') event_date(${s_date_`city'}) ///
>                                 time(anio_sem) controls(`control_vars') `rest
> r_`city'' special_legend(`special_legend') ///
>                                 sample_restr(`sample_restr')
 30.                                 
.                         /*build_synth_control, outcomes(`outcome_vars') city(
> `city') event_date(`y_date_`city'') ///
>                                 time(anio)     controls(`control_vars') `rest
> r_`city'' special_legend(`special_legend') ///
>                                 sample_restr(`sample_restr')*/
.                         
.                         plot_scm, outcomes(``group_vars'_vars') city(`city') 
> event_date(${s_date_`city'}) ///
>                                 time(anio_sem) groups_vars(`group_vars') city
> _legend(${legend_`city'})           ///
>                                 stub_list(``group_vars'_stubs') special_legen
> d(`special_legend')
 31. 
.                         /*plot_scm, outcomes(``group_vars'_vars') city(`city'
> ) event_date(`y_date_`city'') ///
>                                 time(anio)     groups_vars(`group_vars') city
> _legend(${legend_`city'})         ///
>                                 stub_list(``group_vars'_stubs') special_legen
> d(`special_legend')*/
.                 }
 32. 
.         /*grc1leg scm_`city'_`group_vars'_anio_sem scm_`city'_`group_vars'_an
> io_semplacebo, cols(2) ///
>             legendfrom(scm_`city'_`group_vars'_anio_sem) position(6) ///
>             graphregion(color(white))
>         graph display, ysize(6.5) xsize(9.5)
>         graph export ../figures/scm_`city'_`group_vars'_anio_sem.pdf, replace
> 
>         grc1leg scm_`city'_`group_vars'_anio scm_`city'_`group_vars'_anioplac
> ebo, cols(2) ///
>             legendfrom(scm_`city'_`group_vars'_anio) position(6) ///
>             graphregion(color(white))
>         graph display, ysize(6.5) xsize(9.5)
>         graph export ../figures/scm_`city'_`group_vars'_anio.pdf, replace*/
.         }
 33.         }
 34. end

. 
. program build_synth_control
  1.         syntax [if], outcomes(string) controls(string) city(string) event_
> date(string) ///
>             time(str) sample_restr(str) [special_legend(string) restr(string)
> ]
  2. 
.     use "..\..\..\assign_treatment\output\ech_final_98_2016.dta", clear
  3.     `sample_restr'
  4. 
.         * Setup time settings by: qtr, sem, yr
.         if "`time'" == "anio_qtr" {
  5.                         local weight pesotri
  6.                         local lag_list `" 8 9 10 11 12 13 14 15 16 17 18 1
> 9 20 21 22 23 24 25 26 27 28"' //`" 1 3 5 7 "'
  7.                         local range "if inrange(`time', tq(`event_date') -
>  28,tq(`event_date') + 8) "
  8.                         qui sum `time' `range'  
  9.                         local min_year = year(dofq(r(min)))
 10.                         qui sum `time'  if  `time' == tq(`event_date')
 11.                 }
 12.                 else if "`time'" == "anio_sem" {
 13.                         local weight pesosem
 14.                         local lag_list `" 8 9 10 11 12 13 14 15 16 17 18 1
> 9 20 "' //`" 5 6 7 8 9 10 11 12 "'
 15.                         local range "if inrange(`time', th(`event_date') -
>  20,th(`event_date') + 4) "
 16.                         qui sum `time' `range'  
 17.                         local min_year = year(dofh(r(min)))
 18.                         qui sum `time'  if  `time' == th(`event_date')    
>       
 19.                 }
 20.                 else {
 21.                         local weight pesoan
 22.                         local lag_list `" 2 3 4 5 6 7 "' //`" 3 4 5 6 "'
 23.                         local range "if inrange(`time', `event_date' - 4, 
> `event_date' + 2) "
 24.                         qui sum `time' `range'  
 25.                         local min_year = r(min)
 26.                         qui sum `time'  if  `time' == `event_date'      
 27.                 }
 28.         local event_date = r(mean)              
 29.         keep `range'
 30.         cap drop if `restr'
 31. 
.         * Setup the controls to be used depending on the period
.         if `min_year' < 2001  {
 32.                 local control_vars " c98_* "
 33.                 }
 34.         else if `min_year' >=2001 & `min_year' < 2006  {
 35.                 local control_vars " c98_* c01_* "
 36.                 }
 37.         else {
 38.                 local control_vars " c98_* c01_* c06_* "
 39.                 }
 40.                 
.         * Get identifier of treated unit, and collapse data by time and loc_c
> ode
.         qui sum loc_code if treatment_`city'==1 | placebo_`city'==1
 41.         local trunit = r(mean)
 42.         replace treatment_`city'=0 if treatment_`city'!=1 //to include all
>  locations, not just the DiD controls
 43.         replace   placebo_`city'=0 if   placebo_`city'!=1 
 44.         collapse (mean) `controls' `control_vars' `outcomes' treatment_`ci
> ty' `if' [aw = `weight'], by(`time' loc_code)
 45.                 
.         * Check the panel is balanced, this is for the synthetic control to w
> ork
.         xtset loc_code `time'
 46.         local num_`time's = r(tmax) - r(tmin) + 1
 47.         bysort loc_code: gen num_`time' = _N
 48.         keep if num_`time' == `num_`time's'  /*for proper geocodes this sh
> ould be an assertion*/
 49. 
.         * Check the panel is balanced against missing values
.         local n_outcomes: word count `outcomes'
 50.         forval i = 1/`n_outcomes' {
 51.                 local outcome_var: word `i' of `outcomes' 
 52.                 drop if `outcome_var'==.
 53.         }
 54.         bysort loc_code: replace num_`time' = _N
 55.         keep if num_`time' == `num_`time's' /*for proper geocodes this sho
> uld be an assertion*/
 56. 
.         save "../temp/donorpool_`city'_`time'`special_legend'.dta", replace
 57.         
.         * Create the synth control for each outcome
.         forval i = 1/`n_outcomes' {
 58.                 local var: word `i' of `outcomes'
 59.                 use "../temp/donorpool_`city'_`time'`special_legend'.dta",
>  clear
 60.                 
.                 * Create lags of current outcome
.                 local lags "" // so that we do not add lags of other outcomes
 61.                 local i=1
 62.                 foreach j of numlist `lag_list' {
 63.                         local lag`i' = `event_date' - `j'
 64.                         local lags  = "`lags'" + " `var'(`lag`i'') "
 65.                         local i = `i'+1
 66.                 }
 67.                 * We need unabbreviated variables for the synth
.                 qui desc `control_vars', f varlist
 68.                 local control_vars_exp `r(varlist)'
 69. 
.                 * Run SCM, save data for this outcome, and rename vars
.                 qui synth `var' `controls' `control_vars_exp' `lags', ///
>                         trunit(`trunit') trperiod(`event_date') ///
>                         keep("../temp/synth_`city'_`var'`special_legend'.dta"
> , replace) 
 70. 
.                 use "../temp/synth_`city'_`var'`special_legend'.dta", clear
 71.                 rename (_Co_Number _time _Y_treated _Y_synthetic) ///
>                         (geocode `time' `city'_`var'`special_legend' s_`city'
> _`var'`special_legend')
 72.                 drop if `time'==.
 73.                 drop geocode _W_Weight
 74.                 save "../temp/synth_`city'_`var'`special_legend'.dta", rep
> lace
 75.         }
 76. 
.         * Construct dataset with all outcomes for a given research design: ci
> ty-time
.         local outcome_var: word 1 of `outcomes' 
 77.         use "../temp/synth_`city'_`outcome_var'`special_legend'", clear
 78. 
.         forval i = 2/`n_outcomes' {
 79.                 local outcome_var: word `i' of `outcomes' 
 80.                 merge 1:1 `time' using "../temp/synth_`city'_`outcome_var'
> `special_legend'", nogen
 81.         }
 82.         save "../temp/controltrends_`city'_`time'`special_legend'.dta", re
> place
 83. end

. 
. program plot_scm
  1.     syntax, outcomes(string) city(string) city_legend(string) event_date(s
> tring) ///
>             stub_list(string) time(str) groups_vars(str) [special_legend(stri
> ng)]
  2.         
.         use "../temp/controltrends_`city'_`time'`special_legend'.dta", clear
  3. 
.         * Setup time settings by: qtr, sem, yr
.     if "`time'" == "anio_qtr" {
  4.             format `time' %tq 
  5.                 local vertical = tq(`event_date') + 0.5
  6.                 local xtitle "Year-qtr"
  7.                 }
  8.                 else if "`time'" == "anio_sem" {
  9.                 format `time' %th
 10.                 local vertical = th(`event_date') + 0.5
 11.                 local xtitle "Year-half"                
 12.                 }
 13.                 else {
 14.                 format `time' %ty
 15.                 local vertical = `event_date' + 0.5
 16.                 local xtitle "Year"     
 17.                 }
 18.         local number_outcomes: word count `outcomes'
 19.         tsset `time'
 20.         
.         di `vertical'
 21. 
.         * Create plot for each outcome
.         forval i = 1/`number_outcomes' {
 22.                 local outcome_var: word `i' of `outcomes'
 23.             local stub_var: word `i' of `stub_list'
 24.                 
.                 local range "if inrange(`time', th(`event_date') - 8,th(`even
> t_date') + 4) "
 25. 
.                 tssmooth ma `city'_`outcome_var' = `city'_`outcome_var', wind
> ow(1 1 0) replace
 26.                 tssmooth ma s_`city'_`outcome_var' = s_`city'_`outcome_var
> ', window(1 1 0) replace
 27.                  if "`outcome_var'" == "trabajo" {
 28.                                 local ylabel "0.4 (0.1) 0.6"
 29.                             }
 30.                             else if "`outcome_var'" == "horas_trabajo" {
 31.                                 local ylabel "12 (8) 28"
 32.                             }
 33.                                 
.                 qui twoway (line `city'_`outcome_var' `time' `range', lcolor(
> navy) lwidth(thick)) ///
>                            (line s_`city'_`outcome_var' `time' `range', lpatt
> ern(dash) lcolor(black)), xtitle("`xtitle'") ///
>                            ytitle("`stub_var'", size(vlarge)) xline(`vertical
> ', lcolor(black) lpattern(dot)) ///
>                            legend(label(1 `city_legend') label(2 "Synthetic `
> city_legend'")  size(vlarge) width(100) forcesize) ///
>                            title(`stub_var', color(black) size(vlarge))  xtit
> le(, size(vlarge)) ///
>                            ylabel(`ylabel', labs(large)) xlabel(#7, labs(larg
> e)) graphregion(color(white)) bgcolor(white) ///
>                            name(`city'_`outcome_var'`special_legend', replace
> )
 34.     }
 35.         
.         forval i = 1/`number_outcomes' {
 36.                 local outcome_var: word `i' of `outcomes'
 37.                 local plots = "`plots' " + "`city'_`outcome_var'`special_l
> egend'"
 38.         }
 39.                 
.         local plot1: word 1 of `plots'  
 40.         
.         qui grc1leg `plots', rows(`number_outcomes') legendfrom(`plot1') posi
> tion(6) cols(2) ///
>                    graphregion(color(white)) title({bf: `city_legend' `specia
> l_legend'}, color(black) size(vlarge)) ///
>                    name(scm_`city'_`groups_vars'_`time'`special_legend')
 41.     graph display, ysize(5) xsize(12)
 42.         graph export ../output/scm_`city'_`groups_vars'_`time'`special_leg
> end'.pdf, replace    
 43. end

. 
. main_scm

.     * Dates of treatments
.     global m_date_mvd    "2004m4"

.     global m_date_rivera "2010m6"

.     global m_date_salto  "2013m1"

.     
.     global q_date_mvd    "2004q2"

.     global q_date_rivera "2010q3"

.     global q_date_salto  "2013q1"

.     
.     global s_date_mvd    "2004h1"

.     global s_date_rivera "2010h2"

.     global s_date_salto  "2013h1"

.     
.     global y_date_mvd    2004 

.     global y_date_rivera 2010 

.     global y_date_salto  2013 

. 
.     * Ranges
.     global m_pre  48

.     global m_post 24

.     global q_pre  16

.     global q_post 12

.     global s_pre  8

.     global s_post 4

.     global y_pre  4

.     global y_post 2

. 
.     * Legends
.     global legend_mvd    = "Montevideo"

.     global legend_rivera = "Rivera"

.     global legend_salto  = "Salto"

. 
end of do-file
(1,490,121 observations deleted)
(129,998 observations deleted)
(105,544 real changes made)
(116,432 real changes made)
       panel variable:  loc_code (unbalanced)
        time variable:  anio_sem, 2000h2 to 2012h2, but with gaps
                delta:  1 halfyear
(303 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 real changes made)
(0 observations deleted)
(note: file ../temp/donorpool_rivera_anio_sem.dta not found)
file ../temp/donorpool_rivera_anio_sem.dta saved
(5 observations deleted)
file ../temp/synth_rivera_trabajo.dta saved
(5 observations deleted)
file ../temp/synth_rivera_horas_trabajo.dta saved
(5 observations deleted)
file ../temp/synth_rivera_educ_HS_or_more.dta saved
(5 observations deleted)
file ../temp/synth_rivera_educ_more_HS.dta saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------
(note: file ../temp/controltrends_rivera_anio_sem.dta not found)
file ../temp/controltrends_rivera_anio_sem.dta saved
        time variable:  anio_sem, 2000h2 to 2012h2
                delta:  1 halfyear
101.5
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= rivera_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= s_rivera_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= rivera_horas_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= s_rivera_horas_trabajo
(file ../output/scm_rivera_labor_anio_sem.pdf written in PDF format)
(1,490,121 observations deleted)
(96,121 observations deleted)
(109,503 real changes made)
(128,770 real changes made)
       panel variable:  loc_code (unbalanced)
        time variable:  anio_sem, 2003h1 to 2015h1, but with gaps
                delta:  1 halfyear
(391 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 observations deleted)
(0 real changes made)
(0 observations deleted)
(note: file ../temp/donorpool_salto_anio_sem.dta not found)
file ../temp/donorpool_salto_anio_sem.dta saved
(4 observations deleted)
file ../temp/synth_salto_trabajo.dta saved
(4 observations deleted)
file ../temp/synth_salto_horas_trabajo.dta saved
(4 observations deleted)
file ../temp/synth_salto_educ_HS_or_more.dta saved
(4 observations deleted)
file ../temp/synth_salto_educ_more_HS.dta saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                25  
    -----------------------------------------
(note: file ../temp/controltrends_salto_anio_sem.dta not found)
file ../temp/controltrends_salto_anio_sem.dta saved
        time variable:  anio_sem, 2003h1 to 2015h1
                delta:  1 halfyear
106.5
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= salto_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= s_salto_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= salto_horas_trabajo
The smoother applied was
     (1/2)*[x(t-1) + 1*x(t)]; x(t)= s_salto_horas_trabajo
(file ../output/scm_salto_labor_anio_sem.pdf written in PDF format)

. 
end of do-file

 make.py ended: 2018-03-26 19:36:32
